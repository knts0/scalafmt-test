version = 3.0.0

# トラッキングされているファイルのみフォーマット
project.git = true

# DB定義は除外？

# maxColumn: 1行の上限文字数（scalafmtのデフォルトは80文字）
# 差分が出すぎないように調整したい
maxColumn = 100

# [[[ Indentation ]]]
# See: https://scalameta.org/scalafmt/docs/configuration.html#indentation
indent.main = 2
indent.callSite = 2
indent.defnSite = 2
indent.extendSite = 2
indent.withSiteRelativeToExtends = 2

# [[[ Alignment ]]]
# See: https://scalameta.org/scalafmt/docs/configuration.html#alignment
align.preset = none
#align.multiline = true
align.tokens = [
    # { code = "extends", owner = "Defn.(Class|Trait|Object)" }

    # この設定は効かなそう
    # { code = "//", owner = ".*" }

    # { code = "{", owner = "Template" }
    # { code = "}", owner = "Template" }

    # build.sbtなどの%を揃える
    { code = "%", owners = [{ regex = "Term.ApplyInfix" }] },
    { code = "%%", owners = [{ regex = "Term.ApplyInfix" }] },
    { code = "%%%", owners = [{ regex = "Term.ApplyInfix" }] },


    # case文の中の =>を揃える
    { code = "=>", owners = [{ regex = "Case"}] },

    # forの<-を揃える
    # for {
    #   a   <- hoge
    #   xxx <- fugag
    # }
    { code = "<-", owners = [{ regex = "Enumerator.Generator" }] },

    # ->を揃える
    # Map (
    #   1  -> "a"
    #   11 -> "nn"
    # )
    # Json.obj(
    #   "a"   -> "hoge"
    #   "xxx" -> "fuga"
    # )
    { code = "->", owners = [{ regex = "Term.ApplyInfix" }] },

    # class, method定義の型を縦に揃える
    {
      code = ":"
      owners = [{
        regex = "Term\\.Param"
        parents = [ "Ctor\\.Primary" ]
      }, {
        parents = [ "Defn\\." ]
      }]
    },

    # =を縦に揃える
    { code = "=", owners = [
        # for文
        { regex = "Enumerator.Val" },

        # { regex = "Defn.(Va(l|r))" },
        # { regex = "Def" },

        # 型定義
        { regex = "Type" },
    ]}
]

# for文の<-と=を縦に揃えるためのカテゴリ設定
align.treeCategory {
  "Enumerator.Generator" = for
  "Enumerator.Val" = for
}
align.tokenCategory.Equals = Assign
align.tokenCategory.LeftArrow = Assign
# align.multiline = true

# [[[ New lines ]]]
# See: https://scalameta.org/scalafmt/docs/configuration.html#newlines
newlines.source = keep

# [[[ Rewrite Rules ]]]
# See: https://scalameta.org/scalafmt/docs/configuration.html#rewrite-rules
# import並び替え設定は良さそう
# 末尾のカンマ そのままにする
trailingCommas = preserve

# [[[ Comment processing ]]]
# See: https://scalameta.org/scalafmt/docs/configuration.html#comment-processing
# comments.wrap = "no"

## scaladoc
# SpaceAsterisk: scaladoc style
docstrings.style = SpaceAsterisk
docstrings.oneline = keep
docstrings.wrap = no
docstrings.blankFirstLine = yes


# [[[ Spaces ]]]
spaces.inImportCurlyBraces = true
spaces.inInterpolatedStringCurlyBraces = false
spaces.inParentheses = false
spaces.afterKeywordBeforeParen = true
spaces.inByNameTypes = true
spaces.afterSymbolicDefs = false

